(function () {
  var Winwheel = function (config) {
    this.canvasId = config.canvasId;
    this.numSegments = config.numSegments;
    this.segments = config.segments;
    this.animation = config.animation;
    this.canvas = document.getElementById(this.canvasId);
    this.ctx = this.canvas.getContext('2d');
    this.rotationAngle = 0;
    this.spins = 0;
    this.animationTimeout = null;
    this.segmentSizes = [];
    this.anglePerSegment = 360 / this.numSegments;

    this.initialize();
  };

  Winwheel.prototype.initialize = function () {
    for (var i = 0; i < this.numSegments; i++) {
      this.segmentSizes.push(this.segments[i].text.length);
    }

    this.draw();
  };

  Winwheel.prototype.draw = function () {
    var radius = this.canvas.width / 2;
    var angle = this.rotationAngle;

    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);

    for (var i = 0; i < this.numSegments; i++) {
      this.ctx.beginPath();
      this.ctx.moveTo(radius, radius);
      this.ctx.arc(
        radius,
        radius,
        radius,
        this.degreesToRadians(angle),
        this.degreesToRadians(angle + this.anglePerSegment)
      );
      this.ctx.closePath();
      this.ctx.fillStyle = this.segments[i].fillStyle;
      this.ctx.fill();
      this.ctx.strokeStyle = '#000';
      this.ctx.stroke();

      // Текст
      this.ctx.save();
      this.ctx.translate(radius, radius);
      this.ctx.rotate(
        this.degreesToRadians(angle + this.anglePerSegment / 2)
      );
      this.ctx.fillStyle = '#000';
      this.ctx.font = 'bold 16px sans-serif';
      this.ctx.textAlign = 'center';
      this.ctx.fillText(this.segments[i].text, 0, -radius + 50);
      this.ctx.restore();

      angle += this.anglePerSegment;
    }
  };

  Winwheel.prototype.degreesToRadians = function (degrees) {
    return (degrees * Math.PI) / 180;
  };

  Winwheel.prototype.startAnimation = function () {
    var self = this;
    var totalSpins = self.animation.spins * 60;
    var currentStep = 0;

    function animate() {
      self.rotationAngle += 6; // скорость
      self.draw();
      currentStep++;

      if (currentStep < totalSpins) {
        self.animationTimeout = requestAnimationFrame(animate);
      } else {
        if (self.animation.callbackFinished) {
          var winningSegment = self.getIndicatedSegment();
          self.animation.callbackFinished(winningSegment);
        }
      }
    }

    animate();
  };

  Winwheel.prototype.stopAnimation = function () {
    cancelAnimationFrame(this.animationTimeout);
  };

  Winwheel.prototype.getIndicatedSegment = function () {
    var angle = (360 - (this.rotationAngle % 360)) % 360;
    var index = Math.floor(angle / this.anglePerSegment);
    return this.segments[index];
  };

  window.Winwheel = Winwheel;
})();
