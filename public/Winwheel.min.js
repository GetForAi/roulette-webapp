(function() {

  var Winwheel = function(config) {
    this.canvasId = config.canvasId;
    this.numSegments = config.numSegments;
    this.segments = config.segments;
    this.animation = config.animation;
    this.canvas = document.getElementById(this.canvasId);
    this.ctx = this.canvas.getContext('2d');
    this.rotationAngle = 0;
    this.spins = 0;
    this.animationTimeout = null;
    this.segmentSizes = [];
    this.anglePerSegment = 360 / this.numSegments;

    // Initialize wheel
    this.initialize();
  };

  // Initialize the wheel's segments
  Winwheel.prototype.initialize = function() {
    for (var i = 0; i < this.numSegments; i++) {
      this.segmentSizes.push(this.segments[i].text.length);
    }

    this.draw();
  };

  // Draw the wheel
  Winwheel.prototype.draw = function() {
    var radius = this.canvas.width / 2;
    var angle = 0;

    // Draw each segment
    for (var i = 0; i < this.numSegments; i++) {
      this.ctx.beginPath();
      this.ctx.arc(radius, radius, radius, this.degreesToRadians(angle), this.degreesToRadians(angle + this.anglePerSegment));
      this.ctx.lineTo(radius, radius);
      this.ctx.fillStyle = this.segments[i].fillStyle;
      this.ctx.fill();
      this.ctx.stroke();

      // Draw the text on each segment
      this.ctx.save();
      this.ctx.translate(radius, radius);
      this.ctx.rotate(this.degreesToRadians(angle + (this.anglePerSegment / 2)));
      this.ctx.fillStyle = 'black';
      this.ctx.font = '20px Arial';
      this.ctx.fillText(this.segments[i].text, 0, -radius + 40);
      this.ctx.restore();

      angle += this.anglePerSegment;
    }
  };

  // Convert degrees to radians
  Winwheel.prototype.degreesToRadians = function(degrees) {
    return degrees * Math.PI / 180;
  };

  // Start spinning the wheel
  Winwheel.prototype.startAnimation = function() {
    var self = this;

    this.animationTimeout = setTimeout(function() {
      self.spins++;
      self.rotationAngle += 30;

      self.ctx.clearRect(0, 0, self.canvas.width, self.canvas.height);
      self.draw();
      self.rotationAngle %= 360;

      if (self.spins < self.animation.spins) {
        self.startAnimation();
      } else {
        if (self.animation.callbackFinished) {
          var winningSegment = self.getIndicatedSegment();
          self.animation.callbackFinished(winningSegment);
        }
      }
    }, this.animation.duration * 1000 / 60);
  };

  // Stop the spinning animation
  Winwheel.prototype.stopAnimation = function() {
    clearTimeout(this.animationTimeout);
  };

  // Get the segment that the pointer is indicating
  Winwheel.prototype.getIndicatedSegment = function() {
    var angle = (this.rotationAngle % 360) + 360;
    var index = Math.floor(angle / this.anglePerSegment);
    return this.segments[index];
  };

  // Expose Winwheel to the global scope
  window.Winwheel = Winwheel;

})();
